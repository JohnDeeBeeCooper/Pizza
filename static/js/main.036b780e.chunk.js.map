{"version":3,"sources":["components/Items.jsx","utils/textCut.js","components/Piece.jsx","components/Spinner.jsx","utils/getParametres.js","components/App.jsx","index.js"],"names":["Items","props","react_default","a","createElement","Select","isTrue","spin","Block","blocked","onSubmit","handleAdd","Header","Input","value","onChange","handleChange","placeholder","Button","primary","onClick","List","choice","map","item","Item","key","id","Value","delete","handleRemove","styled","div","_templateObject","_templateObject2","css","_templateObject3","button","_templateObject4","_templateObject5","_templateObject6","input","_templateObject7","_templateObject8","_templateObject9","ul","_templateObject10","li","_templateObject11","span","_templateObject12","textCut","word","length","slice","Piece","param","x","wh","width","y","height","radius","wedgeParametres","angle","fill","color","stroke","strokeWidth","rotation","textParametres","offsetX","offsetY","text","fontFamily","fontSize","fontWeight","lib","Spinner","_getParametres","test","navigator","userAgent","arrowRadius","arrowStroke","capText","arrowParametres","list","circleParametres","circleText","App","state","interval","luckyWord","speed","timeout","e","preventDefault","_this","newItems","Object","toConsumableArray","concat","trim","randomColor","luminosity","hue","setState","items","len","filter","newId","target","result","clearInterval","random","rand","Math","stopSpin","clearTimeout","setTimeout","btnOnClick","setInterval","this","Fortuna","itemsParametres","Div","Items_Items","renderSpinner","Component","App_templateObject","App_templateObject2","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.036b780e.chunk.js","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\n\nexport const Items = (props) => {\n    return (\n        <Select isTrue={props.spin}>\n            <Block blocked={props.spin} />\n            <form onSubmit={props.handleAdd}>\n                <Header>\n                    <Input value={props.value} onChange={props.handleChange} placeholder=\"What needs to be rolled\" />\n                    <Button primary onClick={props.handleAdd}>Add</Button>\n                </Header>\n                <List>{props.choice.map(item => <Item key={item.id}><Value>{item.value}</Value><Button delete onClick={props.handleRemove(item.id)}>-</Button></Item>)}</List>\n            </form>\n        </Select>\n    )\n}\nconst Header = styled.div`\n    display: flex;\n    flex-direction: row;\n    margin-top: 20px;\n    text-align: center;\n    @media (max-width: 450px) {\n        flex-direction: column;\n        align-items: flex-start; \n      }`;\n\nconst Block = styled.div`\n    display: none;\n    ${props => props.blocked && css`\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    display: block;\n  `}`;\n\nexport const Button = styled.button`\n    background-color: #6F3665;\n    border-radius: 10px;\n    border: none;\n    outline: none;\n    display: inline-block;\n    cursor: pointer;\n    color:  #ffffff;\n    font-family: Arial;\n    font-size: 18px;\n    padding: 2px 10px;\n    text-decoration: none;\n    text-shadow: 0px 1px 0px #2f6627;\n    :hover{\n        background-color:#90487F;\n    }\n    :active{\n        position: relative;\n        top: 1px;\n    }\n    ${props => props.primary && css`\n    color: white;\n    padding: 5px 15px;\n    margin-left: 10px;\n    @media (max-width: 450px){\n        margin: 0 auto;\n        margin-top: 5px;\n    }\n  `}\n  ${props => props.delete && css`\n    float: right;\n  `}`;\n\nconst Input = styled.input`\n    padding: 7px;\n    border: 1px solid #6F3662;\n    border-radius: 10px;\n    background: #F8F8F2 !important;\n    outline: none;\n    height: 25px;\n    min-width: 300px;\n    max-width: 600px; \n    color: #cccccc;\n    font-size: 15pt;\n    font-family: 'Arial';\n    &:focus{\n        color: #000000;\n        border: 1px solid #000000\n    }`;\n\nconst Select = styled.div`\n    margin: 30px;\n    border-radius: 12px;\n    min-width: 200px;\n    max-width: 550px;\n    display: flex;\n    @media (max-width: 450px){\n        margin: 0 auto;\n        max-width: 400px;\n    }\n    ${props => props.isTrue && css`\n    opacity: 0.3;\n  `}`;\n\nconst List = styled.ul`\n    padding: 0;\n    font-family: 'Arial';\n`;\n\nconst Item = styled.li`\n    list-style-type: none;\n    padding: 10px 15px;\n    display: block;\n    border-bottom: 1px solid #e4d8e6;`;\n\nconst Value = styled.span`\n    font-family: 'Arial' sans-serif;\n    font-weight: 400;\n    font-size: 15pt;`;\n","export default (word) => {\n    if(word.length > 16){\n        return word.slice(0, 15) + '...';\n    }\n    return word;\n}","import React from 'react';\nimport { Wedge, Text, Group} from 'react-konva';\nimport textCut from '../utils/textCut';\n\nexport default (props) => {\n    const param = props.param;\n    const x = props.wh.width / 2;\n    const y = props.wh.height / 2;\n    const radius = props.wh.radius;\n\n    const wedgeParametres = {\n        x: x,\n        y: y,\n        radius: radius,\n        angle: param.angle,\n        fill: param.color,\n        stroke: 'black',\n        strokeWidth: props.wh.strokeWidth,\n        rotation: param.rotation,\n    }\n    const textLength = param.value.length * 0.75;\n    const textParametres = {\n        x: x,\n        y: y,\n        offsetX: -(radius / 3) + textLength,\n        offsetY: props.wh.offsetY,\n        rotation: param.rotation + param.angle / 2,\n        text: textCut(param.value),\n        fontFamily: 'Arial',\n        fontSize: props.wh.fontSize,\n        fontWeight: 400\n    }\n    return (\n        <Group>\n            <Wedge {...wedgeParametres} />\n            <Text {...textParametres} />\n        </Group>\n    )\n}","import React from 'react';\nimport { Layer, Stage, Wedge, Group, Text, Circle } from 'react-konva';\nimport Piece from './Piece'\nimport getParametres from '../utils/getParametres';\nimport textCut from '../utils/textCut';\n\nexport default (props) => {\n    const { width,\n        height,\n        radius,\n        fontSize,\n        strokeWidth,\n        arrowRadius,\n        arrowStroke,\n        capText,\n        x,\n        y,\n        offsetY} = getParametres();\n\n    const arrowParametres = {\n        x,\n        y,\n        rotation: 330,\n        radius: arrowRadius,\n        angle: 60,\n        fill: '#BC5506',\n        stroke: '#7F4F2A',\n        strokeWidth: arrowStroke\n    }\n    const textParametres = {\n        x: width - 130,\n        y: height / 2 - 10,\n        text: textCut(props.word),\n        fontFamily: 'Arial',\n        fontSize\n    }\n    const item = props.list[0];\n    const circleParametres = {\n        x: width / 2,\n        y: height / 2,\n        radius,\n        fill: item.color,\n        stroke: 'black',\n        strokeWidth\n    }\n    const circleText = {\n        x: width / 2,\n        y: height / 2,\n        text: textCut(item.value),\n        fontFamily: 'Arial',\n        fontSize,\n        fontWeight: 400\n    }\n    return (\n        <Stage width={width} height={height}>\n            <Layer>\n                <Group>\n                    {props.list.length !== 1 ? props.list.map(item => <Piece key={item.id} wh={{ width, height, radius, fontSize, strokeWidth, offsetY}} param={item} />) : <Group><Circle {...circleParametres} /><Text {...circleText} /></Group>}\n                    <Wedge {...arrowParametres} />{capText ? <Text {...textParametres} /> : null}\n                </Group>\n            </Layer>\n        </Stage>\n    )\n}","export default () => {\n    let obj = {};\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|BB|PlayBook|IEMobile|Windows Phone|Kindle|Silk|Opera Mini/i.test(navigator.userAgent)) {\n        obj = {\n            radius: 150,\n            width: 320,\n            height: 312,\n            fontSize: 11,\n            strokeWidth: 1,\n            arrowRadius: 18,\n            arrowStroke: 1,\n            capText: false,\n            x: 300,\n            y: 156,\n            offsetY: 5\n        }\n\n    } else {\n        obj = {\n            radius: 250,\n            width: 820,\n            height: 520,\n            fontSize: 17,\n            strokeWidth: 1,\n            arrowRadius: 30,\n            arrowStroke: 1,\n            capText: true,\n            x: 655,\n            y: 260,\n            offsetY: 10\n        }\n\n    }\n    return obj;\n}","import React, { Component } from 'react';\nimport { Items, Button } from './Items';\nimport Spinner from './Spinner'\nimport styled from 'styled-components';\nimport randomColor from 'randomcolor';\n\nexport default class App extends Component {\n  state = {\n    choice: [],\n    id: 0,\n    value: '',\n    spin: false,\n    interval: null,\n    luckyWord: '',\n    speed: 3,\n    timeout: null\n  }\n  handleAdd = (e) => {\n    e.preventDefault();\n    const len = this.state.choice.length + 1;\n    const angle = 360 / len;\n    if (this.state.value !== '') {\n      const newItems = [...this.state.choice, {\n        id: this.state.id,\n        value: this.state.value.trim(),\n        rotation: null,\n        angle: angle,\n        color: randomColor({\n          luminosity: 'light',\n          hue: 'random'\n        })\n      }].map(item => {\n        item.rotation = angle * item.id;\n        item.angle = angle;\n        return item;\n      });\n      this.setState({ choice: newItems, id: this.state.id + 1, value: '' });\n    }\n  }\n  handleRemove = (id) => (e) => {\n    e.preventDefault();\n    const items = this.state.choice;\n    const len = this.state.choice.length - 1;\n    const angle = len === 0 ? 0 : 360 / len;\n    const newItems = items\n      .filter(item => item.id !== id)\n      .map(item => {\n        if (item.id > id) {\n          item.id--;\n        }\n        item.rotation = item.id * angle;\n        item.angle = angle;\n        return item;\n      });\n    const newId = newItems.length > 0 ? newItems[newItems.length - 1].id + 1 : 0;\n    this.setState({\n      choice: newItems,\n      id: newId\n    });\n  }\n  handleChange = (e) => {\n    e.preventDefault();\n    this.setState({\n      value: e.target.value\n    })\n  }\n  spin = () => {\n    if (this.state.speed <= 0) {\n      this.result();\n    }\n    const newItems = this.state.choice.map(item => {\n      item.rotation += this.state.speed;\n      if (item.rotation >= 360) {\n        item.rotation = item.rotation % 360;\n      }\n      if (item.rotation < 0) {\n        item.rotation += 360;\n      }\n      return item;\n    });\n    const items = this.state.choice;\n    const item = items.filter(item => item.angle >= 360 - item.rotation)[0];\n    const luckyWord = item ? item.value : this.state.luckyWord;\n    this.setState({ choice: newItems, luckyWord: luckyWord });\n  }\n  result = () => {\n    clearInterval(this.state.interval);\n    //clearTimeout(this.state.timeout);\n    this.setState({ interval: null, timeout: null, spin: false });\n  }\n  random = () => {\n    const rand = Math.random() * 180 * this.state.choice.length * Math.random();\n    return this.state.speed < 1 ? rand * this.state.speed : rand / this.state.speed;\n  }\n  stopSpin = () => {\n    clearTimeout(this.state.timeout);\n    this.setState({\n      speed: this.state.speed - 0.030,\n      timeout: setTimeout(this.stopSpin, this.random())\n    });\n  }\n  btnOnClick = () => {\n    if (this.state.choice.length > 1) {\n      if (this.state.spin === false) {\n        this.setState({\n          interval: setInterval(this.spin, 1),\n          spin: true,\n          speed: 3,\n          timeout: setTimeout(this.stopSpin, this.random()),\n        });\n      }\n    }\n  }\n  renderSpinner() {\n    return (\n      this.state.choice.length > 0 ?\n        <Fortuna>\n          <Spinner list={this.state.choice} word={this.state.luckyWord} />\n          <Button onClick={this.btnOnClick}>Spin</Button>\n        </Fortuna>\n        : null\n    )\n  }\n  render() {\n    const itemsParametres = {\n      value: this.state.value,\n      handleRemove: this.handleRemove,\n      handleAdd: this.handleAdd,\n      handleChange: this.handleChange,\n      choice: this.state.choice,\n      spin: this.state.spin\n    }\n    return (\n      <Div>\n        <Items {...itemsParametres} />\n        {this.renderSpinner()}\n      </Div>\n    );\n  }\n}\nconst Fortuna = styled.div`\n    margin: 0 auto;\n    text-align: center;`;\nconst Div = styled.div`\n    display: flex;\n    margin: 0 auto;\n    @media(max-width: 450px){\n      flex-direction: column;\n    }\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}